
schema: EconSchema

params:

- {name: Q, value: 0, min: 0, max: 7}
- {name: disc, value: 0}
- {name: mc, value: 1.5}


calcs:
  P: (8)-(params.Q) # price with no discrimination
  profit: (params.Q)*((calcs.P)-(params.mc)) # profit with no discrimination



aspectRatio: 1.3

layout:
  OneGraphPlusSidebar:

    graph:
      xAxis:
        max: 7.5
        ticks: 0
      yAxis:
        orient: left
        min: -(5.5)
        max: 8
        ticks: 0


      objects:

      - Label:
              coordinates: [7.5, 0]
              text: "` \\\\text{GB} `"
              yPixelOffset: 0
              position: l
      - Label:
              coordinates: [0, 8]
              text: "` \\\\text{euro/GB}  `"
              xPixelOffset: 0


# marginal cost
      - Line:
          yIntercept: params.mc
          color: Red
          strokeWidth: 1
          position: l
          label:
            text: MC
            x: 7.3

# price line with no discrimination
      - Line:
          yIntercept: calcs.P
          color: Green
          strokeWidth: 1
          position: l
          label:
            text: P
            x: 7.5
          show: params.disc == 0 && params.Q > 0

# cost
      - Rectangle:
          x1: 0
          y1: 0
          x2: params.Q
          y2: params.mc
          fill: red
          show: params.Q < 7
      - Rectangle:
          x1: 0
          y1: 0
          x2: 7
          y2: 1
          fill: red
          show: params.Q == 7
      - Rectangle:
          x1: 0
          y1: 1
          x2: 6
          y2: params.mc
          fill: purple
          opacity: 0.5
          show: params.Q == 7 && params.disc == 0
      - Rectangle:
          x1: 0
          y1: 1
          x2: 6
          y2: params.mc
          fill: red
          show: params.Q == 7 && params.disc == 1
      - Rectangle:
          x1: 6
          y1: 1
          x2: 7
          y2: params.mc
          fill: gray
          show: params.Q == 7




# individual demand
      - Point: {coordinates: [1, 7], droplines: {vertical: 1, horizontal: 7}, color: Blue, r: 3, strokeWidth: 0.5}
      - Point: {coordinates: [2, 6], droplines: {vertical: 2, horizontal: 6}, color: Blue, r: 3, strokeWidth: 0.5}
      - Point: {coordinates: [3, 5], droplines: {vertical: 3, horizontal: 5}, color: Blue, r: 3, strokeWidth: 0.5}
      - Point: {coordinates: [4, 4], droplines: {vertical: 4, horizontal: 4}, color: Blue, r: 3, strokeWidth: 0.5}
      - Point: {coordinates: [5, 3], droplines: {vertical: 5, horizontal: 3}, color: Blue, r: 3, strokeWidth: 0.5}
      - Point: {coordinates: [6, 2], droplines: {vertical: 6, horizontal: 2}, color: Blue, r: 3, strokeWidth: 0.5}
      - Point: {coordinates: [7, 1], droplines: {vertical: 7, horizontal: 1}, color: Blue, r: 3, strokeWidth: 0.5}

# marginal revenue with no discrimination
      - Point: {coordinates: [1, 7], droplines: {vertical: 1, horizontal: 7}, color: Green, r: 3, strokeWidth: 0.5, show: params.disc == 0}
      - Point: {coordinates: [2, 5], droplines: {vertical: 2, horizontal: 5}, color: Green, r: 3, strokeWidth: 0.5, show: params.disc == 0}
      - Point: {coordinates: [3, 3], droplines: {vertical: 3, horizontal: 3}, color: Green, r: 3, strokeWidth: 0.5, show: params.disc == 0}
      - Point: {coordinates: [4, 1], droplines: {vertical: 4, horizontal: 1}, color: Green, r: 3, strokeWidth: 0.5, show: params.disc == 0}
      - Point: {coordinates: [5, -1], droplines: {vertical: 5, horizontal: -1}, color: Green, r: 3, strokeWidth: 0.5, show: params.disc == 0}
      - Point: {coordinates: [6, -3], droplines: {vertical: 6, horizontal: -3}, color: Green, r: 3, strokeWidth: 0.5, show: params.disc == 0}
      - Point: {coordinates: [7, -5], droplines: {vertical: 7, horizontal: -5}, color: Green, r: 3, strokeWidth: 0.5, show: params.disc == 0}

# consumer surplus with no discrimination
      - Rectangle: {x1: 0, y1: 6, x2: 1, y2: 7, fill: blue, show: params.Q > 1 && params.disc ==0}
      - Rectangle: {x1: 0, y1: 5, x2: 2, y2: 6, fill: blue, show: params.Q > 2 && params.disc ==0}
      - Rectangle: {x1: 0, y1: 4, x2: 3, y2: 5, fill: blue, show: params.Q > 3 && params.disc ==0}
      - Rectangle: {x1: 0, y1: 3, x2: 4, y2: 4, fill: blue, show: params.Q > 4 && params.disc ==0}
      - Rectangle: {x1: 0, y1: 2, x2: 5, y2: 3, fill: blue, show: params.Q > 5 && params.disc ==0}
      - Rectangle: {x1: 0, y1: params.mc, x2: 6, y2: 2, fill: blue, show: params.Q > 6 && params.disc ==0}

# profit with no discrimination
      - Rectangle: {x1: 0, y1: params.mc, x2: params.Q, y2: calcs.P, fill: green, show: params.disc ==0 && params.Q < 7}

# profit with discrimination
      - Rectangle: {x1: 0, y1: 6, x2: 1, y2: 7, fill: green, show: params.Q > 1 && params.disc ==1}
      - Rectangle: {x1: 0, y1: 5, x2: 2, y2: 6, fill: green, show: params.Q > 2 && params.disc ==1}
      - Rectangle: {x1: 0, y1: 4, x2: 3, y2: 5, fill: green, show: params.Q > 3 && params.disc ==1}
      - Rectangle: {x1: 0, y1: 3, x2: 4, y2: 4, fill: green, show: params.Q > 4 && params.disc ==1}
      - Rectangle: {x1: 0, y1: 2, x2: 5, y2: 3, fill: green, show: params.Q > 5 && params.disc ==1}
      - Rectangle: {x1: 0, y1: params.mc, x2: 6, y2: 2, fill: green, show: params.Q > 6 && params.disc ==1}
      - Rectangle: {x1: 0, y1: params.mc, x2: params.Q, y2: calcs.P, fill: green, show: params.disc ==1 && params.Q < 7}


# evaluation
      - Label:
          coordinates: [5,7]
          text: "` \\\\LARGE\\\\text{BINGO!} `" 
          position: c
          bgcolor: none
          color: green
          show: (params.disc == 0 && params.Q == 3) || (params.disc == 1 && params.Q == 6)







    sidebar:
      controls:

      - title: Perfect Discrimination - Indivisible Good
        # description: Scegliere il tipo di compensazione per visualizzare 
        #               vincolo di bilancio e scelta ottima corrispondenti ai nuovi prezzi e al 
        #               reddito compensato.
        radioGroup:
          param: disc
          options:
            - Linear Pricing
            - Perfect Discrimination


      - title: Linear Pricing
        description: Find the quantity that maximizes the monopolist's profit.
        sliders:
        - param: Q
          label: "` Q `"
        divs:
          - html: "` By producing $Q=0$, the monopolist earns zero profit. `"
            show: params.Q == 0
          - html: "` To sell $Q=1$ in the most profitable way, the monopolist
                    must set a price equal to $ ${calcs.P}$. Profit is then equal to
                    $$
                    (${calcs.P}-${params.mc})\\\\times ${params.Q} = ${calcs.profit}
                    $$
                     `"
            show: params.Q > 0
          - html: "` This is the maximum profit under linear pricing.
                      Without discrimination, the monopolist cannot do better than this.
                     `"
            show: params.Q == 3
        show: params.disc == 0


      - title: Perfect Discrimination
        description: Find the quantity that maximizes the monopolist's profit.
        sliders:
        - param: Q
          label: "` Q `"
        divs:
          - html: "` By producing $Q=0$, the monopolist earns zero profit. `"
            show: params.Q == 0
          - html: "` The monopolist can sell the first unit for up to
                    $7$ euros.
                    Profit is therefore
                    $$
                    (7-1.5)=5.5
                    $$
                    `"
            show: params.Q == 1
          - html: "` The monopolist can sell the second unit for up to
                    $6$ euros, <i>continuing to sell the first at $7$ euros</i>.
                    Profit is therefore
                    $$
                    (7-1.5)+(6-1.5)=10
                    $$
                     `"
            show: params.Q == 2
          - html: "` The monopolist can sell the third unit for up to
                    $5$ euros, <i>continuing to sell the first at $7$ euros and the second
                    at $6$ euros</i>.
                    Profit is therefore
                    $$
                    (7-1.5)+(6-1.5)+(5-1.5)=13.5
                    $$
                     `"
            show: params.Q == 3
          - html: "` The monopolist can sell the fourth unit for up to
                    $4$ euros, <i>continuing to sell the first at $7$, the second
                    at $6$, etc.</i>.
                    Profit is therefore
                    $$
                    (7-1.5)+\\\\cdots+(4-1.5)=16
                    $$
                     `"
            show: params.Q == 4
          - html: "` The monopolist can sell the fifth unit for up to
                    $3$ euros, <i>continuing to sell the first at $7$, the second
                    at $6$, etc.</i>.
                    Profit is therefore
                    $$
                    (7-1.5)+\\\\cdots+(3-1.5)=17.5
                    $$
                     `"
            show: params.Q == 5
          - html: "` The monopolist can sell the sixth unit for up to
                    $2$ euros, <i>continuing to sell the first at $7$, the second
                    at $6$, etc.</i>.
                    Profit is therefore
                    $$
                    (7-1.5)+\\\\cdots+(2-1.5)=18
                    $$
                     `"
            show: params.Q == 6
          - html: "` The monopolist can sell the seventh unit for up to
                    $1$ euro, <i>continuing to sell the first at $7$, the second
                    at $6$, etc.</i>.
                    Profit is therefore
                    $$
                    (7-1.5)+\\\\cdots+(1-1.5)=17.5
                    $$
                     `"
            show: params.Q == 7
        show: params.disc == 1







    explanation:
      divs:
        - html: <br><br>
          show: params.Q == 0
        - html: "` The demand function is represented by the blue dots. `"
        - html: "` The marginal revenue function is represented by the green dots. `"
          show: params.disc == 0
        - html: "` The marginal revenue function coincides with the demand function. `"
          show: params.disc == 1
        - html: "`
                 By setting a price of ${calcs.P}, the monopolist sells ${params.Q} units.
                 The monopolist's cost is the red area, profit is the green area.
                 Consumer surplus is the light blue area.
                `"
          show: params.disc == 0 && params.Q > 0 && params.Q < 7
        - html: "`
                 By setting a price of ${calcs.P}, the monopolist sells ${params.Q} units.
                 The monopolist's cost is the sum of the red, purple, and gray areas.
                 Profit is negative (the loss equals the sum of the purple and gray areas).
                 Consumer surplus is the sum of the light blue and purple areas.
                `"
          show: params.disc == 0 && params.Q == 7
        - html: "`
                 By selling ${params.Q} units under perfect discrimination,
                 the monopolist earns a profit equal to the green area.
                 Consumer surplus is zero.
                `"
          show: params.disc == 1 && params.Q > 0 && params.Q < 7
        - html: "`
                 By selling ${params.Q} units under perfect discrimination,
                 the monopolist earns a profit equal to the difference between the green
                 area and the gray area.
                 Consumer surplus is zero.
                `"
          show: params.disc == 1 && params.Q == 7







