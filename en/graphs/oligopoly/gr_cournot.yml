
schema: EconSchema
params:
- {name: a, value: 5, min: 2, max: 11, round: 1}
- {name: b, value: 1, min: 0.1, max: 1, round: 0.1}
- {name: s, value: 1, min: 0, max: 1, round: 0.25}
- {name: c, value: 2, min: 0, max: 8, round: 0.5}

calcs:
  nash: (1000)*((params.a)-(params.c))/((params.b)*(2+params.s))
  mono: (1000)*((params.a)-(params.c))/((params.b)*(2))
  maxQ: (1000)*((params.a)-(params.c))/((params.b)*(params.s)) # vertical intercept of BR2

#aspectRatio: 1

layout:
  OneGraphPlusSidebar:
    graph:
      xAxis:
        ticks: 0
        max: 3300
      yAxis:
        max: 3300
        ticks: 0
      objects:

      - Label:
            coordinates: [3240, 0]
            text: "` \\\\text{Quantità} `"
            yPixelOffset: 10
            position: l
      - Label:
            coordinates: [3240, 0]
            text: "` \\\\text{Impresa 2} `"
            yPixelOffset: -10
            position: l
      - Label:
            coordinates: [0,3300]
            text: "` \\\\text{Quantità} `"
            yPixelOffset: 10
      - Label:
            coordinates: [0,3300]
            text: "` \\\\text{Impresa 1} `"
            yPixelOffset: -10

# BR1
      - Line:
          point: [0,calcs.mono]
          slope: -(params.s)/2
          label:
            text: BR_1
            x: min(3000,(0.85)*(calcs.maxQ))
          color: Blue
          strokeWidth: 1.5
          show: params.s !== 0

# BR2
      - Line:
          point: [calcs.mono,0]
          slope: -2/(params.s)
          label:
            text: BR_2
            y: min(3000,(0.85)*(calcs.maxQ))
          color: Red
          strokeWidth: 1.5
          show: params.s !== 0

# intercepts
      - Point: {coordinates: [0, calcs.mono], r: 0, droplines: {horizontal: calcs.mono.toFixed(2)}, color: Blue} 
      - Point: {coordinates: [calcs.maxQ, 0], r: 0, droplines: {vertical: calcs.maxQ.toFixed(2)}, color: Blue} 
      - Point: {coordinates: [0, calcs.maxQ], r: 0, droplines: {horizontal: calcs.maxQ.toFixed(2)}, color: Red} 
      - Point: {coordinates: [calcs.mono, 0], r: 0, droplines: {vertical: calcs.mono.toFixed(2)}, color: Red} 


# equilibrium
      - Point:
          coordinates: [calcs.nash, calcs.nash]
          r: 4
          droplines:
            horizontal: calcs.nash.toFixed(2)
            vertical: calcs.nash.toFixed(2)
          strokeWidth: 0.5
          color: Green

# # monopoly
#       - Point:
#           coordinates: [calcs.monquantity, calcs.monquantity]
#           droplines:
#             horizontal: calcs.monquantity.toFixed(1)
#             vertical: calcs.monquantity.toFixed(1)
#           color: Green
#           show: params.s == 0

#       - Line:
#           point: [calcs.monquantity,0]
#           point2: [calcs.monquantity,calcs.monquantity]
#           color: Blue
#           strokeWidth: 1.5
#           show: params.s == 0
#           label:
#             text: BR_1
#             y: 22

#       - Line:
#           point: [0,calcs.monquantity]
#           point2: [calcs.monquantity,calcs.monquantity]
#           color: Red
#           strokeWidth: 1.5
#           show: params.s == 0
#           label:
#             text: BR_2
#             x: 22




    sidebar:

      controls:

      - title: Equilibrio di Cournot-Nash
#        checkboxes:
#        - param: showCS
#          label: "\\text{Mostra e calcola surplus dei consumatori.}"

        sliders:
        - param: a
          label: a
        - param: b
          label: b
        # - param: s
        #   label: s
        - param: c
          label: c

        divs:
        - html: "` `"


















