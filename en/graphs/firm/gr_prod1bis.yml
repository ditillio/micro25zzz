params:
- {name: showEFF, value: true}
- {name: d, value: 0}
- {name: p, value: 4, min: 0, max: 12}
- {name: m, value: 100}
- {name: op1, value: 0.15}
- {name: op2, value: 0.1}
- {name: ops, value: 0.2}

- {name: l, value: 1.5, min: 0.2, max: 3, round: 0.1}

# marginal product with half labor units
- {name: b11, value: 112}
- {name: b12, value: 48}
- {name: b21, value: 36}
- {name: b22, value: 30}
- {name: b31, value: 26}
- {name: b32, value: 24}

calcs:
# total and average product with divisible labor
  x: (80)*((params.l))^(0.5)
  ap: (80)*((params.l))^(-0.5)

# marginal product with whole labor units
  b1: ((params.b11)+(params.b12))/2
  b2: ((params.b21)+(params.b22))/2
  b3: ((params.b31)+(params.b32))/2

# total product with half labor units
  t11: (params.b11)/2
  t12: ((params.b11)+(params.b12))/2
  t21: ((params.b11)+(params.b12)+(params.b21))/2
  t22: ((params.b11)+(params.b12)+(params.b21)+(params.b22))/2
  t31: ((params.b11)+(params.b12)+(params.b21)+(params.b22)+(params.b31))/2
  t32: ((params.b11)+(params.b12)+(params.b21)+(params.b22)+(params.b31)+(params.b32))/2

# total product with whole labor units
  t1: calcs.t12
  t2: calcs.t22
  t3: calcs.t32

# average product with half labor units
  ap11: (calcs.t11)/0.5
  ap12: (calcs.t12)/1
  ap21: (calcs.t21)/1.5
  ap22: (calcs.t22)/2
  ap31: (calcs.t31)/2.5
  ap32: (calcs.t32)/3

# average product with whole labor units
  ap1: calcs.ap12
  ap2: calcs.ap22
  ap3: calcs.ap32

aspectRatio: 1

layout:
  TwoVerticalGraphsPlusSidebar:

    topGraph: 
      xAxis:
        max: 3.1
        ticks: 5
      yAxis:
        max: 160
        ticks: none

      objects:

        - Label:
              coordinates: [3.1, 0]
              text: "` \\\\text{Labor (dd)} `"
              yPixelOffset: 0
              position: l
        - Label:
              coordinates: [0, 160]
              text: "` \\\\text{Output (kg)}  `"
              xPixelOffset: -5

# efficient frontier whole labor units
        - Point: {coordinates: [0,0], color: Blue, show: params.d < 2 && params.showEFF == true, r: 5}
        - Point: {coordinates: [1,calcs.t1], color: Blue, droplines: {horizontal: calcs.t1, vertical: }, show: params.d < 2 && params.showEFF == true, r: 5}
        - Point: {coordinates: [2,calcs.t2], color: Blue, droplines: {horizontal: calcs.t2, vertical: }, show: params.d < 2 && params.showEFF == true, r: 5}
        - Point: {coordinates: [3,calcs.t3], color: Blue, droplines: {horizontal: calcs.t3, vertical: }, show: params.d < 2 && params.showEFF == true, r: 5}

# efficient frontier half labor units
        - Point: {coordinates: [0.5,calcs.t11], color: Blue, droplines: {horizontal: calcs.t11, vertical: }, show: params.d == 1 && params.showEFF == true, r: 5}
        - Point: {coordinates: [1.5,calcs.t21], color: Blue, droplines: {horizontal: calcs.t21, vertical: }, show: params.d == 1 && params.showEFF == true, r: 5}
        - Point: {coordinates: [2.5,calcs.t31], color: Blue, droplines: {horizontal: calcs.t31, vertical: }, show: params.d == 1 && params.showEFF == true, r: 5}

# efficient frontier divisible labor
        - Curve:
            fn: 80*(x)^0.5
            color: Blue
            strokeWidth: 2
            label:
              text: "` Q = 80 L^{0.5} `"
              x: 3
              position: bl
            show: params.d == 2 && params.showEFF == true

# # tangent
#         - Line:
#             point: [calcs.dem,(12*(calcs.dem))-2*(calcs.dem)^2]
#             slope: params.p
#             color: Black
#             min: calcs.dem-1
#             max: calcs.dem+1
#             strokeWidth: 1
#             show: params.d == 2

        - Point:
            coordinates: [params.l, calcs.x]
            droplines: {vertical: params.l.toFixed(1), horizontal: calcs.x.toFixed(2)}
            color: Blue
            r: 5
            drag:
            - horizontal: l
            show: params.d == 2





    bottomGraph: 
      xAxis:
        max: 3.1
        ticks: 5
      yAxis:
        max: 120
        ticks: none

      objects:

        - Label:
              coordinates: [3.1, 0]
              text: "` \\\\text{Labor (dd)} `"
              yPixelOffset: 0
              position: l
        - Label:
              coordinates: [0, 120]
              text: "` \\\\text{kg/dd}  `"
              xPixelOffset: -5

# AP whole labor units
        - Point: {coordinates: [1,calcs.ap1], color: Brown, droplines: {horizontal: calcs.ap1, vertical: }, show: params.d == 0 && params.showEFF == true, r: 5}
        - Point: {coordinates: [2,calcs.ap2], color: Brown, droplines: {horizontal: calcs.ap2, vertical: }, show: params.d == 0 && params.showEFF == true, r: 5}
        - Point: {coordinates: [3,calcs.ap3], color: Brown, droplines: {horizontal: calcs.ap3, vertical: }, show: params.d == 0 && params.showEFF == true, r: 5}

# AP half labor units
        - Point: {coordinates: [0.5,calcs.ap11], color: Brown, droplines: {horizontal: calcs.ap11, vertical: }, show: params.d == 1 && params.showEFF == true, r: 5}
        - Point: {coordinates: [1,calcs.ap12], color: Brown, droplines: {horizontal: calcs.ap12, vertical: }, show: params.d == 1 && params.showEFF == true, r: 5}
        - Point: {coordinates: [1.5,calcs.ap21], color: Brown, droplines: {horizontal: calcs.ap21.toFixed(1), vertical: }, show: params.d == 1 && params.showEFF == true, r: 5}
        - Point: {coordinates: [2,calcs.ap22], color: Brown, droplines: {horizontal: , vertical: }, show: params.d == 1 && params.showEFF == true, r: 5}
        - Point: {coordinates: [2.5,calcs.ap31], color: Brown, droplines: {horizontal: , vertical: }, show: params.d == 1 && params.showEFF == true, r: 5}
        - Point: {coordinates: [3,calcs.ap32], color: Brown, droplines: {horizontal: , vertical: }, show: params.d == 1 && params.showEFF == true, r: 5}

# shadow points
        - Point: {coordinates: [0,(calcs.ap22)+1], color: Brown, droplines: {horizontal: calcs.ap22}, show: params.d == 1 && params.showEFF == true, r: 0}
        - Point: {coordinates: [0,(calcs.ap31)+0.5], color: Brown, droplines: {horizontal: calcs.ap31}, show: params.d == 1 && params.showEFF == true, r: 0}
        - Point: {coordinates: [0,(calcs.ap32)-2], color: Brown, droplines: {horizontal: calcs.ap32}, show: params.d == 1 && params.showEFF == true, r: 0}


# AP divisible labor
        - Curve:
            fn: 80*(x)^(-0.5)
            color: Brown
            strokeWidth: 2
            label:
              text: "` AP_L = 80 L^{-0.5} `"
              x: 3
              position: bl
            show: params.d == 2 && params.showEFF == true

        - Point:
            coordinates: [params.l, calcs.ap]
            droplines: {vertical: params.l.toFixed(1), horizontal: calcs.ap.toFixed(2)}
            color: Brown
            r: 5
            drag:
            - horizontal: l
            show: params.d == 2








    sidebar:
      controls:
      - title: Production Function and Average Product
        description: The production function is represented in blue in the top graph. The average product function is
                      represented in brown in the bottom graph.
        # sliders:
        # - param: p
        #   label: P
        radioGroup:
          param: d
          options:
            - Labor hired by whole days
            - Labor hired by half days
            - Labor hired by small fractions of time
        # checkboxes:
        # - param: showEFF
        #   label: "` \\\\textit{Evidenzia frontiera efficiente} `"
        divs:
        - html: "`  `"
        - html: "`  `"
        - html: "`  `"
        - html: "` The production function is $Q=80\\\\sqrt{L}$. `"
        - html: "` Average product is therefore $AP_L=80 / \\\\sqrt{L}$. `"
        - html: "` The minimum quantity of labor that the firm can hire is one unit, i.e. one day.
                  If the firm hires one unit of labor, average product is
                  $$ \\\\frac{80}{1}=80, $$
                  if the firm hires two units of labor, average product is
                  $$ \\\\frac{113}{2}=56.5, $$
                  if the firm hires three units of labor, average product is
                  $$ \\\\frac{138}{3}=46, $$
                  etc.
                    `"
          show: (params.d == 0)
        - html: "` The minimum quantity of labor that the firm can hire is half a unit, i.e. a half day.
                  If the firm hires half a unit of labor, average product is
                  $$ \\\\frac{56}{0.5}=112, $$
                  if the firm hires one unit of labor, average product is
                  $$ \\\\frac{80}{1}=80, $$
                  if the firm hires one and a half units of labor, average product is
                  $$ \\\\frac{98}{1.5}=65.3, $$
                  etc.
                    `"
          show: (params.d == 1)
        - html: "` Labor is finely divisible, i.e. the firm can hire arbitrarily small fractions of units of labor. 
                    Average product is a continuous curve. `"
          show: (params.d == 2)
        - html: "` Drag the blue point or the brown point to see how output and average product vary, as the quantity of 
                      labor hired by the firm varies. `"
          show: (params.d == 2)

    # explanation:
    #   divs:
    #     - html: "` I punti nel grafico rappresentano le possibilità produttive dell'impresa quando i lavoratori devono essere assunti 
    #               a giornata. Non assumendo lavoratori, l'output è zero. Assumendo un lavoratore per una giornata, l'impresa può scegliere se ottenere
    #               un output pari a zero (per es. chiedendo al lavoratore di non fare nulla), pari a 80 (il massimo output ottenibile con una giornata
    #               di lavoro) oppure pari a 30 o 56 (sfruttando, ma non al massimo, la produttività del lavoratore). Assumendo un lavoratore per due
    #               giornate (o due lavoratori per una giornata ciascuno), l'impresa può ottenere un output pari a 0, 30, 56, 80, 98 o 113, e così via. `"
    #       show: params.d == 0
    #     - html: "` Fra tutte le possibilità produttive a sua disposizione, l'impresa sarà ovviamente interessata solo a quelle
    #                <b>efficienti</b>, ovvero quelle possibilità tali per cui, in corrispondenza di un dato livello di impiego di lavoro,
    #                la quantità di output è massima. Selezionare la casella di controllo <i>Evidenzia frontiera efficiente</i> per visualizzare le possibilità produttive
    #                efficienti (punti blu nel grafico). `"
    #       show: params.d == 0
    #     - html: "` I punti nel grafico rappresentano le possibilità produttive dell'impresa quando i lavoratori devono essere assunti in multipli di
    #               mezza giornata. In questo caso, oltre alle possibilità produttive già disponibili quando i lavoratori devono essere assunti a giornata,
    #               l'impresa ha a disposizione nuove possibilità, come per es. produrre 126 unità di output impiegando 2.5 giornate di lavoro. `"
    #       show: params.d == 1
    #     - html: "` Fra tutte le possibilità produttive a sua disposizione, l'impresa sarà ovviamente interessata solo a quelle
    #                <b>efficienti</b>, ovvero quelle possibilità tali per cui, in corrispondenza di un dato livello di impiego di lavoro,
    #                la quantità di output è massima. Selezionare la casella di controllo <i>Evidenzia frontiera efficiente</i> per visualizzare le possibilità produttive
    #                efficienti (punti blu nel grafico). `"
    #       show: params.d == 1
    #     - html: "` Quando l'input è divisibile, cioè quando l'impresa può assumere il lavoro a frazioni di ora, oltre alle possibilità produttive già disponibili quando i lavoratori devono essere assunti 
    #               in multipli di mezza giornata, l'impresa ha a disposizione tante altre possibilità (qualunque punto nell'area grigia). `"
    #       show: params.d == 2
    #     - html: "` Fra tutte le possibilità produttive a sua disposizione, l'impresa sarà ovviamente interessata solo a quelle
    #                <b>efficienti</b>, ovvero quelle tali per cui, in corrispondenza di un dato livello di impiego di lavoro,
    #                la quantità di output è massima. Selezionare la casella di controllo <i>Evidenzia frontiera efficiente</i> per visualizzare le possibilità produttive
    #                efficienti (in questo caso, l'intera curva blu). `"
    #       show: params.d == 2
