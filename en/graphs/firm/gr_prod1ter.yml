params:
- {name: showEFF, value: true}
- {name: d, value: 0}
- {name: p, value: 4, min: 0, max: 12}
- {name: m, value: 100}
- {name: op1, value: 0.15}
- {name: op2, value: 0.1}
- {name: ops, value: 0.2}

- {name: b11, value: 112}
- {name: b12, value: 48}
- {name: b21, value: 36}
- {name: b22, value: 30}
- {name: b31, value: 26}
- {name: b32, value: 24}

- {name: l, value: 1.5, min: 0.2, max: 3, round: 0.1}


calcs:
  x: (80)*((params.l))^(0.5)
  mp: (40)*((params.l))^(-0.5)

  b1: ((params.b11)+(params.b12))/2
  b2: ((params.b21)+(params.b22))/2
  b3: ((params.b31)+(params.b32))/2

  t11: (params.b11)/2
  t12: (params.b11+params.b12)/2
  t21: (params.b11+params.b12+params.b21)/2
  t22: (params.b11+params.b12+params.b21+params.b22)/2
  t31: (params.b11+params.b12+params.b21+params.b22+params.b31)/2
  t32: (params.b11+params.b12+params.b21+params.b22+params.b31+params.b32)/2
  t1: calcs.b1
  t2: calcs.t1+calcs.b2
  t3: calcs.t2+calcs.b3
  cs0: max((calcs.b1)-(params.p),0)+max((calcs.b2)-(params.p),0)+max((calcs.b3)-(params.p),0)
  cs1: (max((params.b11)-(params.p),0)+max((params.b12)-(params.p),0)+max((params.b21)-(params.p),0)
        +max((params.b22)-(params.p),0)+max((params.b31)-(params.p),0)+max((params.b32)-(params.p),0))/2
  dem: (12-params.p)/4
  cs2: ( -(params.p) + 12 ) * (calcs.dem)/2

aspectRatio: 0.9

layout:
  TwoVerticalGraphsPlusSidebar:

    topGraph: 
      xAxis:
        max: 3.1
        ticks: 5
      yAxis:
        max: 160
        ticks: none

      objects:

        - Label:
              coordinates: [3.1, 0]
              text: "` \\\\text{Labor (dd)} `"
              yPixelOffset: 0
              position: l
        - Label:
              coordinates: [0, 160]
              text: "` \\\\text{Output (kg)}  `"
              xPixelOffset: -5

# efficient frontier whole labor units
        - Point: {coordinates: [0,0], color: Blue, show: params.d < 2 && params.showEFF == true, r: 5}
        - Point: {coordinates: [1,calcs.b1], color: Blue, droplines: {horizontal: calcs.b1, vertical: }, show: params.d < 2 && params.showEFF == true, r: 5}
        - Point: {coordinates: [2,calcs.b1+calcs.b2], color: Blue, droplines: {horizontal: calcs.b1+calcs.b2, vertical: }, show: params.d < 2 && params.showEFF == true, r: 5}
        - Point: {coordinates: [3,calcs.b1+calcs.b2+calcs.b3], color: Blue, droplines: {horizontal: calcs.b1+calcs.b2+calcs.b3, vertical: }, show: params.d < 2 && params.showEFF == true, r: 5}

# efficient frontier half labor units
        - Point: {coordinates: [0.5,calcs.t11], color: Blue, droplines: {horizontal: calcs.t11, vertical: }, show: params.d == 1 && params.showEFF == true, r: 5}
        - Point: {coordinates: [1.5,calcs.t21], color: Blue, droplines: {horizontal: calcs.t21, vertical: }, show: params.d == 1 && params.showEFF == true, r: 5}
        - Point: {coordinates: [2.5,calcs.t31], color: Blue, droplines: {horizontal: calcs.t31, vertical: }, show: params.d == 1 && params.showEFF == true, r: 5}

# efficient frontier divisible labor
        - Curve:
            fn: 80*(x)^0.5
            color: Blue
            strokeWidth: 2
            label:
              text: "` Q = 80 L^{0.5} `"
              x: 3
              position: bl
            show: params.d == 2 && params.showEFF == true

# # tangent
#         - Line:
#             point: [calcs.dem,(12*(calcs.dem))-2*(calcs.dem)^2]
#             slope: params.p
#             color: Black
#             min: calcs.dem-1
#             max: calcs.dem+1
#             strokeWidth: 1
#             show: params.d == 2

        - Point:
            coordinates: [params.l, calcs.x]
            droplines: {vertical: params.l.toFixed(1), horizontal: calcs.x.toFixed(2)}
            color: Blue
            r: 5
            drag:
            - horizontal: l
            show: params.d == 2





    bottomGraph: 
      xAxis:
        max: 3.1
        ticks: 5
      yAxis:
        max: 120
        ticks: none

      objects:

        - Label:
              coordinates: [3.1, 0]
              text: "` \\\\text{Labor (dd)} `"
              yPixelOffset: 0
              position: l
        - Label:
              coordinates: [0, 120]
              text: "` \\\\text{kg/dd}  `"
              xPixelOffset: -5

# MP whole labor units
        - Point: {coordinates: [1,calcs.b1], color: Red, droplines: {horizontal: calcs.b1, vertical: }, show: params.d == 0 && params.showEFF == true, r: 5}
        - Point: {coordinates: [2,calcs.b2], color: Red, droplines: {horizontal: calcs.b2, vertical: }, show: params.d == 0 && params.showEFF == true, r: 5}
        - Point: {coordinates: [3,calcs.b3], color: Red, droplines: {horizontal: calcs.b3, vertical: }, show: params.d == 0 && params.showEFF == true, r: 5}

# MP half labor units
        - Point: {coordinates: [0.5,params.b11], color: Red, droplines: {horizontal: params.b11, vertical: }, show: params.d == 1 && params.showEFF == true, r: 5}
        - Point: {coordinates: [1,params.b12], color: Red, droplines: {horizontal: params.b12, vertical: }, show: params.d == 1 && params.showEFF == true, r: 5}
        - Point: {coordinates: [1.5,params.b21], color: Red, droplines: {horizontal: params.b21, vertical: }, show: params.d == 1 && params.showEFF == true, r: 5}
        - Point: {coordinates: [2,params.b22], color: Red, droplines: {horizontal: , vertical: }, show: params.d == 1 && params.showEFF == true, r: 5}
        - Point: {coordinates: [2.5,params.b31], color: Red, droplines: {horizontal: , vertical: }, show: params.d == 1 && params.showEFF == true, r: 5}
        - Point: {coordinates: [3,params.b32], color: Red, droplines: {horizontal: , vertical: }, show: params.d == 1 && params.showEFF == true, r: 5}

# shadow points
        - Point: {coordinates: [0,(params.b22)+1], color: Red, droplines: {horizontal: params.b22}, show: params.d == 1 && params.showEFF == true, r: 0}
        - Point: {coordinates: [0,(params.b31)+0.5], color: Red, droplines: {horizontal: params.b31}, show: params.d == 1 && params.showEFF == true, r: 0}
        - Point: {coordinates: [0,(params.b32)-2], color: Red, droplines: {horizontal: params.b32}, show: params.d == 1 && params.showEFF == true, r: 0}


# MP divisible labor
        - Curve:
            fn: 0.5*80*(x)^(-0.5)
            color: Red
            strokeWidth: 2
            label:
              text: "` MP_L = 40 L^{-0.5} `"
              x: 3
              position: bl
            show: params.d == 2 && params.showEFF == true

        - Point:
            coordinates: [params.l, calcs.mp]
            droplines: {vertical: params.l.toFixed(1), horizontal: calcs.mp.toFixed(2)}
            color: Red
            r: 5
            drag:
            - horizontal: l
            show: params.d == 2








    sidebar:
      controls:
      - title: Production Function and Marginal Product
        description: The production function is represented in blue in the top graph. The marginal product function is
                      represented in red in the bottom graph.
        # sliders:
        # - param: p
        #   label: P
        radioGroup:
          param: d
          options:
            - Labor hired by whole days
            - Labor hired by half days
            - Labor hired by small fractions of time
        # checkboxes:
        # - param: showEFF
        #   label: "` \\\\textit{Evidenzia frontiera efficiente} `"
        divs:
        - html: "`  `"
        - html: "`  `"
        - html: "`  `"
        - html: "` The production function is $Q=F(L)=80\\\\sqrt{L}$. `"
        - html: "` The minimum quantity of labor that the firm can hire is one unit, that is,
                  $\\\\Delta L=1$.
                  If the firm hires one unit of labor, marginal product is
                  $$ \\\\frac{80-0}{1}=80, $$
                  If the firm hires two units of labor, marginal product is
                  $$ \\\\frac{113-80}{1}=33, $$
                  If the firm hires three units of labor, marginal product is
                  $$ \\\\frac{138-113}{1}=25, $$
                  etc.
                    `"
          show: (params.d == 0)
        - html: "` The minimum quantity of labor that the firm can hire is half a unit, that is, $\\\\Delta L=1/2$.
                  If the firm hires half a unit of labor, marginal product is
                  $$ \\\\frac{56-0}{1/2}=112, $$
                  if the firm hires one unit of labor, marginal product is
                  $$ \\\\frac{80-56}{1/2}=48, $$
                  if the firm hires one and a half units of labor, marginal product is
                  $$ \\\\frac{98-80}{1/2}=36, $$
                  etc.
                    `"
          show: (params.d == 1)
        - html: "` Labor is finely divisible, i.e. the firm can hire arbitrarily small fractions of units of labor,
                that is, $\\\\Delta L \\\\to 0$. Therefore, the marginal product function is the derivative 
                of the production function:
                  $$ MP_L = F'(L) = 40L^{-0.5}. $$
                    `"
          show: (params.d == 2)
        - html: "` Drag the blue point or the red point to see how output and marginal product vary, as the quantity of 
                      labor hired by the firm varies. `"
          show: (params.d == 2)

    # explanation:
    #   divs:
    #     - html: "` I punti nel grafico rappresentano le possibilità produttive dell'impresa quando i lavoratori devono essere assunti 
    #               a giornata. Non assumendo lavoratori, l'output è zero. Assumendo un lavoratore per una giornata, l'impresa può scegliere se ottenere
    #               un output pari a zero (per es. chiedendo al lavoratore di non fare nulla), pari a 80 (il massimo output ottenibile con una giornata
    #               di lavoro) oppure pari a 30 o 56 (sfruttando, ma non al massimo, la produttività del lavoratore). Assumendo un lavoratore per due
    #               giornate (o due lavoratori per una giornata ciascuno), l'impresa può ottenere un output pari a 0, 30, 56, 80, 98 o 113, e così via. `"
    #       show: params.d == 0
    #     - html: "` Fra tutte le possibilità produttive a sua disposizione, l'impresa sarà ovviamente interessata solo a quelle
    #                <b>efficienti</b>, ovvero quelle possibilità tali per cui, in corrispondenza di un dato livello di impiego di lavoro,
    #                la quantità di output è massima. Selezionare la casella di controllo <i>Evidenzia frontiera efficiente</i> per visualizzare le possibilità produttive
    #                efficienti (punti blu nel grafico). `"
    #       show: params.d == 0
    #     - html: "` I punti nel grafico rappresentano le possibilità produttive dell'impresa quando i lavoratori devono essere assunti in multipli di
    #               mezza giornata. In questo caso, oltre alle possibilità produttive già disponibili quando i lavoratori devono essere assunti a giornata,
    #               l'impresa ha a disposizione nuove possibilità, come per es. produrre 126 unità di output impiegando 2.5 giornate di lavoro. `"
    #       show: params.d == 1
    #     - html: "` Fra tutte le possibilità produttive a sua disposizione, l'impresa sarà ovviamente interessata solo a quelle
    #                <b>efficienti</b>, ovvero quelle possibilità tali per cui, in corrispondenza di un dato livello di impiego di lavoro,
    #                la quantità di output è massima. Selezionare la casella di controllo <i>Evidenzia frontiera efficiente</i> per visualizzare le possibilità produttive
    #                efficienti (punti blu nel grafico). `"
    #       show: params.d == 1
    #     - html: "` Quando l'input è divisibile, cioè quando l'impresa può assumere il lavoro a frazioni di ora, oltre alle possibilità produttive già disponibili quando i lavoratori devono essere assunti 
    #               in multipli di mezza giornata, l'impresa ha a disposizione tante altre possibilità (qualunque punto nell'area grigia). `"
    #       show: params.d == 2
    #     - html: "` Fra tutte le possibilità produttive a sua disposizione, l'impresa sarà ovviamente interessata solo a quelle
    #                <b>efficienti</b>, ovvero quelle tali per cui, in corrispondenza di un dato livello di impiego di lavoro,
    #                la quantità di output è massima. Selezionare la casella di controllo <i>Evidenzia frontiera efficiente</i> per visualizzare le possibilità produttive
    #                efficienti (in questo caso, l'intera curva blu). `"
    #       show: params.d == 2
