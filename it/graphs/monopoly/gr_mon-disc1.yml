
schema: EconSchema

params:

- {name: Q, value: 0, min: 0, max: 7}
- {name: disc, value: 0}
- {name: mc, value: 1.5}


calcs:
  P: (8)-(params.Q) # price with no discrimination
  profit: (params.Q)*((calcs.P)-(params.mc)) # profit with no discrimination



aspectRatio: 1.3

layout:
  OneGraphPlusSidebar:

    graph:
      xAxis:
        max: 7.5
        ticks: 0
      yAxis:
        orient: left
        min: -(5.5)
        max: 8
        ticks: 0


      objects:

      - Label:
              coordinates: [7.5, 0]
              text: "` \\\\text{GB} `"
              yPixelOffset: 0
              position: l
      - Label:
              coordinates: [0, 8]
              text: "` \\\\text{euro/GB}  `"
              xPixelOffset: 0


# marginal cost
      - Line:
          yIntercept: params.mc
          color: Red
          strokeWidth: 1
          position: l
          label:
            text: MC
            x: 7.3

# price line with no discrimination
      - Line:
          yIntercept: calcs.P
          color: Green
          strokeWidth: 1
          position: l
          label:
            text: P
            x: 7.5
          show: params.disc == 0 && params.Q > 0

# cost
      - Rectangle:
          x1: 0
          y1: 0
          x2: params.Q
          y2: params.mc
          fill: red
          show: params.Q < 7
      - Rectangle:
          x1: 0
          y1: 0
          x2: 7
          y2: 1
          fill: red
          show: params.Q == 7
      - Rectangle:
          x1: 0
          y1: 1
          x2: 6
          y2: params.mc
          fill: purple
          opacity: 0.5
          show: params.Q == 7 && params.disc == 0
      - Rectangle:
          x1: 0
          y1: 1
          x2: 6
          y2: params.mc
          fill: red
          show: params.Q == 7 && params.disc == 1
      - Rectangle:
          x1: 6
          y1: 1
          x2: 7
          y2: params.mc
          fill: gray
          show: params.Q == 7




# individual demand
      - Point: {coordinates: [0.98, 7], droplines: {vertical: 1, horizontal: 7}, color: Blue, r: 3, strokeWidth: 0.5}
      - Point: {coordinates: [2, 6], droplines: {vertical: 2, horizontal: 6}, color: Blue, r: 3, strokeWidth: 0.5}
      - Point: {coordinates: [3, 5], droplines: {vertical: 3, horizontal: 5}, color: Blue, r: 3, strokeWidth: 0.5}
      - Point: {coordinates: [4, 4], droplines: {vertical: 4, horizontal: 4}, color: Blue, r: 3, strokeWidth: 0.5}
      - Point: {coordinates: [5, 3], droplines: {vertical: 5, horizontal: 3}, color: Blue, r: 3, strokeWidth: 0.5}
      - Point: {coordinates: [6, 2], droplines: {vertical: 6, horizontal: 2}, color: Blue, r: 3, strokeWidth: 0.5}
      - Point: {coordinates: [7, 1], droplines: {vertical: 7, horizontal: 1}, color: Blue, r: 3, strokeWidth: 0.5}

# marginal revenue with no discrimination
      - Point: {coordinates: [1.02, 7], color: Green, r: 3, strokeWidth: 0.5, show: params.disc == 0}
      - Point: {coordinates: [2, 5], color: Green, r: 3, strokeWidth: 0.5, show: params.disc == 0}
      - Point: {coordinates: [3, 3], color: Green, r: 3, strokeWidth: 0.5, show: params.disc == 0}
      - Point: {coordinates: [4, 1], color: Green, r: 3, strokeWidth: 0.5, show: params.disc == 0}
      - Point: {coordinates: [5, -1], droplines: {vertical: , horizontal: -1}, color: Green, r: 3, strokeWidth: 0.5, show: params.disc == 0}
      - Point: {coordinates: [6, -3], droplines: {vertical: , horizontal: -3}, color: Green, r: 3, strokeWidth: 0.5, show: params.disc == 0}
      - Point: {coordinates: [7, -5], droplines: {vertical: , horizontal: -5}, color: Green, r: 3, strokeWidth: 0.5, show: params.disc == 0}

# consumer surplus with no discrimination
      - Rectangle: {x1: 0, y1: 6, x2: 1, y2: 7, fill: blue, show: params.Q > 1 && params.disc ==0}
      - Rectangle: {x1: 0, y1: 5, x2: 2, y2: 6, fill: blue, show: params.Q > 2 && params.disc ==0}
      - Rectangle: {x1: 0, y1: 4, x2: 3, y2: 5, fill: blue, show: params.Q > 3 && params.disc ==0}
      - Rectangle: {x1: 0, y1: 3, x2: 4, y2: 4, fill: blue, show: params.Q > 4 && params.disc ==0}
      - Rectangle: {x1: 0, y1: 2, x2: 5, y2: 3, fill: blue, show: params.Q > 5 && params.disc ==0}
      - Rectangle: {x1: 0, y1: params.mc, x2: 6, y2: 2, fill: blue, show: params.Q > 6 && params.disc ==0}

# profit with no discrimination
      - Rectangle: {x1: 0, y1: params.mc, x2: params.Q, y2: calcs.P, fill: green, show: params.disc ==0 && params.Q < 7}

# profit with discrimination
      - Rectangle: {x1: 0, y1: 6, x2: 1, y2: 7, fill: green, show: params.Q > 1 && params.disc ==1}
      - Rectangle: {x1: 0, y1: 5, x2: 2, y2: 6, fill: green, show: params.Q > 2 && params.disc ==1}
      - Rectangle: {x1: 0, y1: 4, x2: 3, y2: 5, fill: green, show: params.Q > 3 && params.disc ==1}
      - Rectangle: {x1: 0, y1: 3, x2: 4, y2: 4, fill: green, show: params.Q > 4 && params.disc ==1}
      - Rectangle: {x1: 0, y1: 2, x2: 5, y2: 3, fill: green, show: params.Q > 5 && params.disc ==1}
      - Rectangle: {x1: 0, y1: params.mc, x2: 6, y2: 2, fill: green, show: params.Q > 6 && params.disc ==1}
      - Rectangle: {x1: 0, y1: params.mc, x2: params.Q, y2: calcs.P, fill: green, show: params.disc ==1 && params.Q < 7}


# evaluation
      - Label:
          coordinates: [5,7]
          text: "` \\\\LARGE\\\\text{BINGO!} `" 
          position: c
          bgcolor: none
          color: green
          show: (params.disc == 0 && params.Q == 3) || (params.disc == 1 && params.Q == 6)







    sidebar:
      controls:

      - title: Discriminazione perfetta - Bene non divisibile
        # description: Scegliere il tipo di compensazione per visualizzare 
        #               vincolo di bilancio e scelta ottima corrispondenti ai nuovi prezzi e al 
        #               reddito compensato.
        radioGroup:
          param: disc
          options:
            - Prezzi lineari
            - Discriminazione perfetta


      - title: Prezzi lineari
        description: Trova la quantità che massimizza il profitto del monopolista. 
        sliders:
        - param: Q
          label: "` Q `"
        divs:
          - html: "` Producendo $Q=0$ il monopolista ottiene zero profitti. `"
            show: params.Q == 0
          - html: "` Per vendere $Q=1$ nel modo più profittevole il monopolista
                    deve fissare un prezzo pari a $ ${calcs.P}$. Il profitto è
                    quindi pari a
                    $$
                    (${calcs.P}-${params.mc})\\\\times ${params.Q} = ${calcs.profit}
                    $$
                     `"
            show: params.Q > 0
          - html: "` Questo è il profitto massimo con prezzi lineari.
                      Senza discriminare, il monopolista non può fare meglio di così.
                     `"
            show: params.Q == 3
        show: params.disc == 0


      - title: Discriminazione perfetta
        description: Trova la quantità che massimizza il profitto del monopolista. 
        sliders:
        - param: Q
          label: "` Q `"
        divs:
          - html: "` Producendo $Q=0$ il monopolista ottiene zero profitti. `"
            show: params.Q == 0
          - html: "` Il monopolista può vendere la prima unità ad un massimo
                    di $7$ euro.
                    Il profitto è quindi
                    $$
                    (7-1.5)=5.5
                    $$
                    `"
            show: params.Q == 1
          - html: "` Il monopolista può vendere la seconda unità ad un massimo
                    di $6$ euro, <i>continuando a vendere la prima a $7$ euro</i>.
                    Il profitto è quindi
                    $$
                    (7-1.5)+(6-1.5)=10
                    $$
                     `"
            show: params.Q == 2
          - html: "` Il monopolista può vendere la terza unità ad un massimo
                    di $5$ euro, <i>continuando a vendere la prima a $7$ euro e la seconda
                    a $6$ euro</i>.
                    Il profitto è quindi
                    $$
                    (7-1.5)+(6-1.5)+(5-1.5)=13.5
                    $$
                     `"
            show: params.Q == 3
          - html: "` Il monopolista può vendere la quarta unità ad un massimo
                    di $4$ euro, <i>continuando a vendere la prima a $7$, la seconda
                    a $6$, ecc.</i>.
                    Il profitto è quindi
                    $$
                    (7-1.5)+\\\\cdots+(4-1.5)=16
                    $$
                     `"
            show: params.Q == 4
          - html: "` Il monopolista può vendere la quinta unità ad un massimo
                    di $3$ euro, <i>continuando a vendere la prima a $7$, la seconda
                    a $6$, ecc.</i>.
                    Il profitto è quindi
                    $$
                    (7-1.5)+\\\\cdots+(3-1.5)=17.5
                    $$
                     `"
            show: params.Q == 5
          - html: "` Il monopolista può vendere la sesta unità ad un massimo
                    di $2$ euro, <i>continuando a vendere la prima a $7$, la seconda
                    a $6$, ecc.</i>.
                    Il profitto è quindi
                    $$
                    (7-1.5)+\\\\cdots+(2-1.5)=18
                    $$
                     `"
            show: params.Q == 6
          - html: "` Il monopolista può vendere la settima unità ad un massimo
                    di $1$ euro, <i>continuando a vendere la prima a $7$, la seconda
                    a $6$, ecc.</i>.
                    Il profitto è quindi
                    $$
                    (7-1.5)+\\\\cdots+(1-1.5)=17.5
                    $$
                     `"
            show: params.Q == 7
        show: params.disc == 1







    explanation:
      divs:
        - html: <br><br>
          show: params.Q == 0
        - html: "` La funzione di domanda è rappresentata dai punti blu. `"
        - html: "` La funzione di ricavo marginale è rappresentata dai punti verdi. `"
          show: params.disc == 0
        - html: "` La funzione di ricavo marginale coincide con la funzione di domanda. `"
          show: params.disc == 1
        - html: "`
                 Fissando un prezzo pari a ${calcs.P} il monopolista vende ${params.Q} unità.
                 Il costo del monopolista è pari all'area rossa, il profitto all'area verde.
                 Il surplus del consumatore è pari all'area azzurra.
                `"
          show: params.disc == 0 && params.Q > 0 && params.Q < 7
        - html: "`
                 Fissando un prezzo pari a ${calcs.P} il monopolista vende ${params.Q} unità.
                 Il costo del monopolista è pari alla somma delle aree rossa, viola e grigia.
                 Il profitto è negativo (la perdita è pari alla somma delle aree viola e grigia).
                 Il surplus del consumatore è pari alla somma delle aree azzurra e viola.
                `"
          show: params.disc == 0 && params.Q == 7
        - html: "`
                 Vendendo ${params.Q} unità e discriminando perfettamente, il
                 monopolista ottiene un profitto pari all'area verde.
                 Il surplus del consumatore è zero.
                `"
          show: params.disc == 1 && params.Q > 0 && params.Q < 7
        - html: "`
                 Vendendo ${params.Q} unità e discriminando perfettamente, il
                 monopolista ottiene un profitto pari alla differenza tra l'area verde
                 e l'area grigia.
                 Il surplus del consumatore è zero.
                `"
          show: params.disc == 1 && params.Q == 7









